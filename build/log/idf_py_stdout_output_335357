[1/10] Performing build step for 'bootloader'
[1/1] cd /home/kvhnuke/Github/esp32/build/bootloader/esp-idf/esptool_py && /home/kvhnuke/.espressif/python_env/idf5.2_py3.10_env/bin/python /home/kvhnuke/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 /home/kvhnuke/Github/esp32/build/bootloader/bootloader.bin
Bootloader binary size 0x52b0 bytes. 0x2d50 bytes (35%) free.
[2/8] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/esp_libusb.c.obj
[3/8] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/class_driver.c.obj
[4/8] Linking C static library esp-idf/main/libmain.a
[5/8] Generating ld/sections.ld
[6/8] Linking CXX executable usb_host_lib_example.elf
[7/8] Generating binary image from built executable
esptool.py v4.7.dev1
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated /home/kvhnuke/Github/esp32/build/usb_host_lib_example.bin
[8/8] cd /home/kvhnuke/Github/esp32/build/esp-idf/esptool_py && /home/kvhnuke/.espressif/python_env/idf5.2_py3.10_env/bin/python /home/kvhnuke/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/kvhnuke/Github/esp32/build/partition_table/partition-table.bin /home/kvhnuke/Github/esp32/build/usb_host_lib_example.bin
usb_host_lib_example.bin binary size 0x44000 bytes. Smallest app partition is 0x100000 bytes. 0xbc000 bytes (73%) free.
